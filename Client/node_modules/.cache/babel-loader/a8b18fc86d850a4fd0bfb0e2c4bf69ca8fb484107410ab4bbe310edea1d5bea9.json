{"ast":null,"code":"import { ADD_FAV, REMOVE_FAV, FILTER_CARDS, ORDEN_CARDS } from \"./actions\";\nconst initialState = {\n  myFavorites: [],\n  allFavorites: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'ADD_FAV':\n      return {\n        ...state,\n        myFavorites: action.payload,\n        allCharacters: action.payload\n      };\n    case 'REMOVE_FAV':\n      return {\n        ...state,\n        myFavorites: action.payload,\n        allCharacters: action.payload\n      };\n    case ORDEN_CARDS:\n      let favoritesOrder = state.myFavorites.sort((a, b) => {\n        return action.payload === \"Ascendente\" ? a.id - b.id : b.id - a.id;\n      });\n      return {\n        ...state,\n        myFavorites: favoritesOrder\n      };\n    case FILTER_CARDS:\n      let favoriteFilter = action.payload === \"All\" ? state.allFavorites : state.allFavorites.filter(char => char.gender === action.payload);\n      return {\n        ...state,\n        myFavorites: favoriteFilter\n      };\n    default:\n      return state;\n  }\n};\nexport default rootReducer;\n\n// let numeros = [2, 3, 5, 6, 4];\n// console.log(numeros.sort((a, b) => a - b));\n\n// let productos = [\n//   { id: 4, nombre: \"camisa\", precio: 1000 },\n//   { id: 2, nombre: \"medias\", precio: 1000 },\n//   { id: 3, nombre: \"zapato\", precio: 1000 },\n//   { id: 1, nombre: \"gorra\", precio: 1000 },\n// ];\n\n// console.log(\n//   productos.sort((a, b) => {\n//     if (a.nombre > b.nombre) {\n//       return 1;\n//     }\n\n//     if (a.nombre < b.nombre) {\n//       return -1;\n//     }\n\n//     return 0;\n//   })\n// );\n\n// let productos = [\n//   { id: 4, nombre: \"camisa\", precio: 1000 },\n//   { id: 2, nombre: \"medias\", precio: 1000 },\n//   { id: 3, nombre: \"zapato\", precio: 1000 },\n//   { id: 1, nombre: \"gorra\", precio: 1000 },\n// ];\n// let filtrados = productos.filter(item => item.id != 3);\n// console.log(filtrados);","map":{"version":3,"names":["ADD_FAV","REMOVE_FAV","FILTER_CARDS","ORDEN_CARDS","initialState","myFavorites","allFavorites","rootReducer","state","action","type","payload","allCharacters","favoritesOrder","sort","a","b","id","favoriteFilter","filter","char","gender"],"sources":["C:/Users/Angelo/Desktop/Rick-and-Morty/Client/src/redux/reducer.js"],"sourcesContent":["import { ADD_FAV, REMOVE_FAV, FILTER_CARDS, ORDEN_CARDS } from \"./actions\"\r\n\r\nconst initialState = {\r\n  myFavorites: [],\r\n  allFavorites: [],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_FAV':\r\n      return { ...state, myFavorites: action.payload, allCharacters: action.payload };\r\n\r\n      case 'REMOVE_FAV':\r\n        return { ...state, myFavorites: action.payload, allCharacters:action.payload };\r\n\r\n    case ORDEN_CARDS:\r\n      let favoritesOrder = state.myFavorites.sort((a, b) => {\r\n        return action.payload === \"Ascendente\" ? a.id - b.id : b.id - a.id;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        myFavorites: favoritesOrder,\r\n      };\r\n\r\n    case FILTER_CARDS:\r\n      let favoriteFilter =\r\n        action.payload === \"All\"\r\n          ? state.allFavorites\r\n          : state.allFavorites.filter((char) => char.gender === action.payload);\r\n\r\n      return {\r\n        ...state,\r\n        myFavorites: favoriteFilter,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n\r\n// let numeros = [2, 3, 5, 6, 4];\r\n// console.log(numeros.sort((a, b) => a - b));\r\n\r\n// let productos = [\r\n//   { id: 4, nombre: \"camisa\", precio: 1000 },\r\n//   { id: 2, nombre: \"medias\", precio: 1000 },\r\n//   { id: 3, nombre: \"zapato\", precio: 1000 },\r\n//   { id: 1, nombre: \"gorra\", precio: 1000 },\r\n// ];\r\n\r\n// console.log(\r\n//   productos.sort((a, b) => {\r\n//     if (a.nombre > b.nombre) {\r\n//       return 1;\r\n//     }\r\n\r\n//     if (a.nombre < b.nombre) {\r\n//       return -1;\r\n//     }\r\n\r\n//     return 0;\r\n//   })\r\n// );\r\n\r\n\r\n// let productos = [\r\n//   { id: 4, nombre: \"camisa\", precio: 1000 },\r\n//   { id: 2, nombre: \"medias\", precio: 1000 },\r\n//   { id: 3, nombre: \"zapato\", precio: 1000 },\r\n//   { id: 1, nombre: \"gorra\", precio: 1000 },\r\n// ];\r\n// let filtrados = productos.filter(item => item.id != 3);\r\n// console.log(filtrados);"],"mappings":"AAAA,SAASA,OAAO,EAAEC,UAAU,EAAEC,YAAY,EAAEC,WAAW,QAAQ,WAAW;AAE1E,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,EAAE;EACfC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGJ,YAAY;EAAA,IAAEK,MAAM;EAC/C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,SAAS;MACZ,OAAO;QAAE,GAAGF,KAAK;QAAEH,WAAW,EAAEI,MAAM,CAACE,OAAO;QAAEC,aAAa,EAAEH,MAAM,CAACE;MAAQ,CAAC;IAE/E,KAAK,YAAY;MACf,OAAO;QAAE,GAAGH,KAAK;QAAEH,WAAW,EAAEI,MAAM,CAACE,OAAO;QAAEC,aAAa,EAACH,MAAM,CAACE;MAAQ,CAAC;IAElF,KAAKR,WAAW;MACd,IAAIU,cAAc,GAAGL,KAAK,CAACH,WAAW,CAACS,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACpD,OAAOP,MAAM,CAACE,OAAO,KAAK,YAAY,GAAGI,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,GAAGD,CAAC,CAACC,EAAE,GAAGF,CAAC,CAACE,EAAE;MACpE,CAAC,CAAC;MAEF,OAAO;QACL,GAAGT,KAAK;QACRH,WAAW,EAAEQ;MACf,CAAC;IAEH,KAAKX,YAAY;MACf,IAAIgB,cAAc,GAChBT,MAAM,CAACE,OAAO,KAAK,KAAK,GACpBH,KAAK,CAACF,YAAY,GAClBE,KAAK,CAACF,YAAY,CAACa,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,MAAM,KAAKZ,MAAM,CAACE,OAAO,CAAC;MAEzE,OAAO;QACL,GAAGH,KAAK;QACRH,WAAW,EAAEa;MACf,CAAC;IAEH;MACE,OAAOV,KAAK;EAAC;AAEnB,CAAC;AAED,eAAeD,WAAW;;AAE1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
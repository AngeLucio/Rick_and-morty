{"ast":null,"code":"import { ADD_FAV, REMOVE_FAV, FILTER_CARDS, ORDEN_CARDS } from \"./actions\";\nconst initialState = {\n  myFavorites: [],\n  allFavorites: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_FAV:\n      return {\n        ...state,\n        myFavo2rites: [...state.myFavorites, action.payload],\n        allFavorites: [...state.allFavorites, action.payload]\n      };\n    case REMOVE_FAV:\n      return {\n        ...state,\n        myFavorites: state.myFavorites.filter(char => char.id !== Number(action.payload))\n      };\n    case ORDEN_CARDS:\n      let favoritesOrder = state.myFavorites.sort((a, b) => {\n        return action.payload === \"Ascendente\" ? a.id - b.id : b.id - a.id;\n      });\n      return {\n        ...state,\n        myFavorites: favoritesOrder\n      };\n    case FILTER_CARDS:\n      let favoriteFilter = action.payload === \"All\" ? state.allFavorites : state.allFavorites.filter(char => char.gender === action.payload);\n      return {\n        ...state,\n        myFavorites: favoriteFilter\n      };\n    default:\n      return state;\n  }\n};\nexport default rootReducer;\n\n// let numeros = [2, 3, 5, 6, 4];\n// console.log(numeros.sort((a, b) => a - b));\n\n// let productos = [\n//   { id: 4, nombre: \"camisa\", precio: 1000 },\n//   { id: 2, nombre: \"medias\", precio: 1000 },\n//   { id: 3, nombre: \"zapato\", precio: 1000 },\n//   { id: 1, nombre: \"gorra\", precio: 1000 },\n// ];\n\n// console.log(\n//   productos.sort((a, b) => {\n//     if (a.nombre > b.nombre) {\n//       return 1;\n//     }\n\n//     if (a.nombre < b.nombre) {\n//       return -1;\n//     }\n\n//     return 0;\n//   })\n// );\n\n// let productos = [\n//   { id: 4, nombre: \"camisa\", precio: 1000 },\n//   { id: 2, nombre: \"medias\", precio: 1000 },\n//   { id: 3, nombre: \"zapato\", precio: 1000 },\n//   { id: 1, nombre: \"gorra\", precio: 1000 },\n// ];\n// let filtrados = productos.filter(item => item.id != 3);\n// console.log(filtrados);","map":{"version":3,"names":["ADD_FAV","REMOVE_FAV","FILTER_CARDS","ORDEN_CARDS","initialState","myFavorites","allFavorites","rootReducer","state","action","type","myFavo2rites","payload","filter","char","id","Number","favoritesOrder","sort","a","b","favoriteFilter","gender"],"sources":["C:/Users/Angelo/Desktop/Rick-and-Morty/Client/src/redux/reducer.js"],"sourcesContent":["import { ADD_FAV, REMOVE_FAV, FILTER_CARDS, ORDEN_CARDS } from \"./actions\";\r\n\r\nconst initialState = {\r\n  myFavorites: [],\r\n  allFavorites: [],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_FAV:\r\n      return {\r\n        ...state,\r\n        myFavo2rites: [...state.myFavorites, action.payload],\r\n        allFavorites: [...state.allFavorites, action.payload],\r\n      };\r\n\r\n    case REMOVE_FAV:\r\n      return {\r\n        ...state,\r\n        myFavorites: state.myFavorites.filter(\r\n          (char) => char.id !== Number(action.payload)\r\n        ),\r\n      };\r\n\r\n    case ORDEN_CARDS:\r\n      let favoritesOrder = state.myFavorites.sort((a, b) => {\r\n        return action.payload === \"Ascendente\" ? a.id - b.id : b.id - a.id;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        myFavorites: favoritesOrder,\r\n      };\r\n\r\n    case FILTER_CARDS:\r\n      let favoriteFilter =\r\n        action.payload === \"All\"\r\n          ? state.allFavorites\r\n          : state.allFavorites.filter((char) => char.gender === action.payload);\r\n\r\n      return {\r\n        ...state,\r\n        myFavorites: favoriteFilter,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n\r\n// let numeros = [2, 3, 5, 6, 4];\r\n// console.log(numeros.sort((a, b) => a - b));\r\n\r\n// let productos = [\r\n//   { id: 4, nombre: \"camisa\", precio: 1000 },\r\n//   { id: 2, nombre: \"medias\", precio: 1000 },\r\n//   { id: 3, nombre: \"zapato\", precio: 1000 },\r\n//   { id: 1, nombre: \"gorra\", precio: 1000 },\r\n// ];\r\n\r\n// console.log(\r\n//   productos.sort((a, b) => {\r\n//     if (a.nombre > b.nombre) {\r\n//       return 1;\r\n//     }\r\n\r\n//     if (a.nombre < b.nombre) {\r\n//       return -1;\r\n//     }\r\n\r\n//     return 0;\r\n//   })\r\n// );\r\n\r\n\r\n// let productos = [\r\n//   { id: 4, nombre: \"camisa\", precio: 1000 },\r\n//   { id: 2, nombre: \"medias\", precio: 1000 },\r\n//   { id: 3, nombre: \"zapato\", precio: 1000 },\r\n//   { id: 1, nombre: \"gorra\", precio: 1000 },\r\n// ];\r\n// let filtrados = productos.filter(item => item.id != 3);\r\n// console.log(filtrados);"],"mappings":"AAAA,SAASA,OAAO,EAAEC,UAAU,EAAEC,YAAY,EAAEC,WAAW,QAAQ,WAAW;AAE1E,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,EAAE;EACfC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGJ,YAAY;EAAA,IAAEK,MAAM;EAC/C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKV,OAAO;MACV,OAAO;QACL,GAAGQ,KAAK;QACRG,YAAY,EAAE,CAAC,GAAGH,KAAK,CAACH,WAAW,EAAEI,MAAM,CAACG,OAAO,CAAC;QACpDN,YAAY,EAAE,CAAC,GAAGE,KAAK,CAACF,YAAY,EAAEG,MAAM,CAACG,OAAO;MACtD,CAAC;IAEH,KAAKX,UAAU;MACb,OAAO;QACL,GAAGO,KAAK;QACRH,WAAW,EAAEG,KAAK,CAACH,WAAW,CAACQ,MAAM,CAClCC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKC,MAAM,CAACP,MAAM,CAACG,OAAO,CAAC;MAEhD,CAAC;IAEH,KAAKT,WAAW;MACd,IAAIc,cAAc,GAAGT,KAAK,CAACH,WAAW,CAACa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACpD,OAAOX,MAAM,CAACG,OAAO,KAAK,YAAY,GAAGO,CAAC,CAACJ,EAAE,GAAGK,CAAC,CAACL,EAAE,GAAGK,CAAC,CAACL,EAAE,GAAGI,CAAC,CAACJ,EAAE;MACpE,CAAC,CAAC;MAEF,OAAO;QACL,GAAGP,KAAK;QACRH,WAAW,EAAEY;MACf,CAAC;IAEH,KAAKf,YAAY;MACf,IAAImB,cAAc,GAChBZ,MAAM,CAACG,OAAO,KAAK,KAAK,GACpBJ,KAAK,CAACF,YAAY,GAClBE,KAAK,CAACF,YAAY,CAACO,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACQ,MAAM,KAAKb,MAAM,CAACG,OAAO,CAAC;MAEzE,OAAO;QACL,GAAGJ,KAAK;QACRH,WAAW,EAAEgB;MACf,CAAC;IAEH;MACE,OAAOb,KAAK;EAAC;AAEnB,CAAC;AAED,eAAeD,WAAW;;AAE1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}